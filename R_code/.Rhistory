setwd("~/Documents/GitHubRepositories/bifiEBBO/R_code")
source("dataProcessor.R")
source("featureAnalysis.R")
source("modelPerformanceAnalysis.R")
library(plotly)
library(caret)
library(e1071)
# FORMAT SUBMITTED PAPER DATA SO IT MAKES SENSE TO SOMEONE NEW
corrs <- c(seq(0.1, 0.9, 0.1), 0.95, 0.975)
data <- combineArrayResults("01-litSuiteSurrogateModelFit", 1, 906)
#data$performance <- data$performance / (data$fMax - data$fMin)
data <- data[, c("instance", "technique", "seed", "dimension", "budget", "globalCorrelation", "relativeError", "localCorrelation", "performance")]
colnames(data) <- c("instance", "technique", "seed", "dimension", "budget", "CC", "RRMSE", "localCorrelation", "performance")
data$CC <- data$CC^2
localProbs <- calculate_local_probabilites(data$localCorrelation, corrs)
data$LCC_sd <- localProbs$localCorrelationSD_R2
data$LCC_coeff <- localProbs$localCorrelationCoeffVariation_R2
for(corr in corrs){
data[, paste0("LCC_", corr)] <- localProbs[, paste0("localCorrR2_", corr)]
}
data <- subset(data, select = -c(localCorrelation))
data <- select(data, -performance, performance)
dataCompletedLit <- data
# features <- c("dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
# for(corr in corrs){
#   features <- c(features, paste0("LCC_", corr))
# }
# features <- c(features, "performance")
# dataAverage = data.frame()
# dataAverage[1:length(unique(data$instance)), "instance"] <- unique(data$instance)
# for(instance in dataAverage$instance){
#   dataAverage[dataAverage$instance == instance, features] <- colMeans(data[data$instance == instance &
#                                                                     data$technique == "kriging", features])
# }
dataProcessed <- combineAndProcessResults("01-litSuiteSurrogateModelFit", 1, 906, localCorrs = corrs)
keepFeatures <- c("instance", "dimension", "budget", "globalCorrelation_R2", "relativeError", "localCorrelationSD_R2", "localCorrelationCoefficientOfVariation_R2")
nameFeatures <- c("instance", "dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
for(corr in corrs){
keepFeatures <- c(keepFeatures, paste0("localCorrelationR2_corr", corr))
nameFeatures <- c(nameFeatures, paste0("LCC_", corr))
}
keepFeatures <- c(keepFeatures, "kriging_1_0-goodWilcoxon", "cokriging_0.8_0.2-goodWilcoxon", "bestPerformanceWilcoxon")
nameFeatures <- c(nameFeatures, "kriging-goodWilcoxon", "cokriging-goodWilcoxon", "superiorAlgorithmWilcoxon")
dataProcessed <- dataProcessed[, keepFeatures]
colnames(dataProcessed) <- nameFeatures
for(i in 1:nrow(dataProcessed)){
dataProcessed[i, "instance"] <- tail(strsplit(dataProcessed[i, "instance"], split = "_")[[1]], 1)
}
dataProcessedCompletedLit <- dataProcessed
# Save it all!
write.csv(dataCompletedLit, file = "../data/analysis/discussion/litRawRunsData.csv", quote = FALSE, row.names = FALSE)
write.csv(dataProcessedCompletedLit, file = "../data/analysis/discussion/litProcessedData.csv", quote = FALSE, row.names = FALSE)
data <- combineArrayResults("00-finalModelAccuracySuiteSurrogateModelFit", 1, 1143, 5)
#data$performance <- data$performance / (data$fMax - data$fMin)
data <- data[, c("instance", "technique", "seed", "dimension", "budget", "globalCorrelation", "relativeError", "localCorrelation", "performance")]
colnames(data) <- c("instance", "technique", "seed", "dimension", "budget", "CC", "RRMSE", "localCorrelation", "performance")
data$CC <- data$CC^2
localProbs <- calculate_local_probabilites(data$localCorrelation, corrs)
data$LCC_sd <- localProbs$localCorrelationSD_R2
data$LCC_coeff <- localProbs$localCorrelationCoeffVariation_R2
for(corr in corrs){
data[, paste0("LCC_", corr)] <- localProbs[, paste0("localCorrR2_", corr)]
}
data <- subset(data, select = -c(localCorrelation))
data <- select(data, -performance, performance)
dataCompletedAug <- data
# features <- c("dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
# for(corr in corrs){
#   features <- c(features, paste0("LCC_", corr))
# }
# features <- c(features, "performance")
# dataAverage = data.frame()
# dataAverage[1:length(unique(data$instance)), "instance"] <- unique(data$instance)
# for(instance in dataAverage$instance){
#   dataAverage[dataAverage$instance == instance, features] <- colMeans(data[data$instance == instance &
#                                                                     data$technique == "kriging", features])
# }
dataProcessed <- combineAndProcessResults("00-finalModelAccuracySuiteSurrogateModelFit", 1, 1143, 5, localCorrs = corrs)
keepFeatures <- c("instance", "dimension", "budget", "globalCorrelation_R2", "relativeError", "localCorrelationSD_R2", "localCorrelationCoefficientOfVariation_R2")
nameFeatures <- c("instance", "dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
for(corr in corrs){
keepFeatures <- c(keepFeatures, paste0("localCorrelationR2_corr", corr))
nameFeatures <- c(nameFeatures, paste0("LCC_", corr))
}
keepFeatures <- c(keepFeatures, "kriging_1_0-goodWilcoxon", "cokriging_0.8_0.2-goodWilcoxon", "bestPerformanceWilcoxon")
nameFeatures <- c(nameFeatures, "kriging-goodWilcoxon", "cokriging-goodWilcoxon", "superiorAlgorithmWilcoxon")
dataProcessed <- dataProcessed[, keepFeatures]
colnames(dataProcessed) <- nameFeatures
for(i in 1:nrow(dataProcessed)){
dataProcessed[i, "instance"] <- tail(strsplit(dataProcessed[i, "instance"], split = "_")[[1]], 1)
}
dataProcessedCompletedAug <- dataProcessed
# Save it all!
write.csv(rbind(dataCompletedLit, dataCompletedAug), file = "../data/analysis/discussion/augRawRunsData.csv", quote = FALSE, row.names = FALSE)
write.csv(rbind(dataProcessedCompletedLit, dataProcessedCompletedAug), file = "../data/analysis/discussion/augProcessedData.csv", quote = FALSE, row.names = FALSE)
# DONE WITH IT!!
dataProcessed <- combineAndProcessResults("00-finalModelAccuracySuiteSurrogateModelFit", 1, 1143, 5, localCorrs = corrs)
keepFeatures <- c("instance", "dimension", "budget", "globalCorrelation_R2", "relativeError", "localCorrelationSD_R2", "localCorrelationCoefficientOfVariation_R2")
nameFeatures <- c("instance", "dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
for(corr in corrs){
keepFeatures <- c(keepFeatures, paste0("localCorrelationR2_corr", corr))
nameFeatures <- c(nameFeatures, paste0("LCC_", corr))
}
keepFeatures <- c(keepFeatures, "kriging_1_0-goodWilcoxon", "cokriging_0.8_0.2-goodWilcoxon", "bestPerformanceWilcoxon")
nameFeatures <- c(nameFeatures, "kriging-goodWilcoxon", "cokriging-goodWilcoxon", "superiorAlgorithmWilcoxon")
dataProcessed <- dataProcessed[, keepFeatures]
colnames(dataProcessed) <- nameFeatures
for(i in 1:nrow(dataProcessed)){
dataProcessed[i, "instance"] <- tail(strsplit(dataProcessed[i, "instance"], split = "_")[[1]], 1)
}
dataProcessed[dataProcessed$superiorAlgorithmWilcoxon == "kriging_1_0", "superiorAlgorithmWilcoxon"] <- "kriging"
dataProcessed[dataProcessed$superiorAlgorithmWilcoxon == "cokriging_0.8_0.2", "superiorAlgorithmWilcoxon"] <- "cokriging"
dataProcessedCompletedAug <- dataProcessed
View(dataProcessed)
dataProcessed <- combineAndProcessResults("01-litSuiteSurrogateModelFit", 1, 906, localCorrs = corrs)
keepFeatures <- c("instance", "dimension", "budget", "globalCorrelation_R2", "relativeError", "localCorrelationSD_R2", "localCorrelationCoefficientOfVariation_R2")
nameFeatures <- c("instance", "dimension", "budget", "CC", "RRMSE", "LCC_sd", "LCC_coeff")
for(corr in corrs){
keepFeatures <- c(keepFeatures, paste0("localCorrelationR2_corr", corr))
nameFeatures <- c(nameFeatures, paste0("LCC_", corr))
}
keepFeatures <- c(keepFeatures, "kriging_1_0-goodWilcoxon", "cokriging_0.8_0.2-goodWilcoxon", "bestPerformanceWilcoxon")
nameFeatures <- c(nameFeatures, "kriging-goodWilcoxon", "cokriging-goodWilcoxon", "superiorAlgorithmWilcoxon")
dataProcessed <- dataProcessed[, keepFeatures]
colnames(dataProcessed) <- nameFeatures
for(i in 1:nrow(dataProcessed)){
dataProcessed[i, "instance"] <- tail(strsplit(dataProcessed[i, "instance"], split = "_")[[1]], 1)
}
dataProcessed[dataProcessed$superiorAlgorithmWilcoxon == "kriging_1_0", "superiorAlgorithmWilcoxon"] <- "kriging"
dataProcessed[dataProcessed$superiorAlgorithmWilcoxon == "cokriging_0.8_0.2", "superiorAlgorithmWilcoxon"] <- "cokriging"
dataProcessedCompletedLit <- dataProcessed
write.csv(dataProcessedCompletedLit, file = "../data/analysis/discussion/litProcessedData.csv", quote = FALSE, row.names = FALSE)
write.csv(rbind(dataProcessedCompletedLit, dataProcessedCompletedAug), file = "../data/analysis/discussion/augProcessedData.csv", quote = FALSE, row.names = FALSE)
